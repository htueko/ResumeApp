plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'
    id "org.jetbrains.dokka"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.htueko.resumeapp"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.all {
            kover {
                enabled = true
                excludes = [
                        "dagger.hilt.internal.aggregatedroot.codegen.*",
                        "hilt_aggregated_deps.*",
                        "com.adammcneilly.toa.core.di.*",
                        "com.adammcneilly.toa.core.ui.theme.*",
                        ".*ComposableSingletons.*",
                        ".*Hilt.*",
                        ".*BuildConfig.*",
                        ".*_Factory.*",
                ]
            }
        }
    }
}

kapt {
    correctErrorTypes = true
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}

tasks.dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            // Suppress obvious functions like default toString or equals. Defaults to true
            suppressObviousFunctions.set(false)
            // Disable linking to online kotlin-stdlib documentation
            noStdlibLink.set(false)
            // Disable linking to online JDK documentation
            noJdkLink.set(false)
            // Disable linking to online Android documentation (only applicable for Android projects)
            noAndroidSdkLink.set(false)
            // hide the deprecated
            skipDeprecated.set(true)
            // show private properties
            includeNonPublic.set(true)
            // Suppress all inherited members that were not overridden in a given class.
            suppressInheritedMembers.set(true)
        }
    }
    outputDirectory.set(file("documentation/html"))
}

dependencies {

    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_viewmodel_version"
    // compose navigation
    implementation "androidx.navigation:navigation-compose:$compose_navigation_version"

    // local database
    // room database
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation"

    // Google truth
    testImplementation "com.google.truth:truth:$truth_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"

    // image loading library
    // coil
    implementation "io.coil-kt:coil-compose:$coil_version"

    // testing flow
    // turbine
    testImplementation "app.cash.turbine:turbine:$turbine_version"
    androidTestImplementation "app.cash.turbine:turbine:$turbine_version"

}